apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.tencent.logindemo"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                def djinni_src_dir = project.hasProperty('djinni_src_dir') ? project.property('djinni_src_dir') : "../../../../../tools/djinni"
                def common_src_dir = project.hasProperty('common_src_dir') ? project.property('common_src_dir') : "../../../../../common"
                def protos_src_dir = project.hasProperty('protos_src_dir') ? project.property('protos_src_dir') : "../../../../../protos"
                def grpc_src_dir = project.hasProperty('grpc_src_dir') ? project.property('grpc_src_dir') : "../../../../../tools/grpc"

                // The paths to the protoc and grpc_cpp_plugin binaries on the host system (so you need to build tools/grpc source code first)
                def protoc = project.hasProperty('protoc') ? project.property('protoc') : grpc_src_dir + '/cmake/build/third_party/protobuf/protoc'
                def grpc_cpp_plugin = project.hasProperty('grpc_cpp_plugin') ? project.property('grpc_cpp_plugin') : grpc_src_dir + '/cmake/build/grpc_cpp_plugin'

                cppFlags "-std=c++11 -frtti -fexceptions"
                arguments '-DANDROID_STL=c++_static'
                arguments '-DRUN_HAVE_POSIX_REGEX=0'
                arguments '-DRUN_HAVE_STD_REGEX=0'
                arguments '-DRUN_HAVE_STEADY_CLOCK=0'
                arguments '-Dprotobuf_BUILD_PROTOC_BINARIES=off'
                arguments '-DgRPC_BUILD_CODEGEN=off'

                arguments '-DDJINNI_SRC_DIR=' + djinni_src_dir
                arguments '-DCOMMON_SRC_DIR=' + common_src_dir
                arguments '-DPROTOS_SRC_DIR=' + protos_src_dir

                arguments '-DGRPC_SRC_DIR=' + grpc_src_dir
                arguments '-DPROTOBUF_PROTOC_EXECUTABLE=' + protoc
                arguments '-DGRPC_CPP_PLUGIN_EXECUTABLE=' + grpc_cpp_plugin
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            java {
                srcDirs = [
                        "../../common/generated-src/java",
                        "src/main/java"
                ]
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
